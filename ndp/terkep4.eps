%!PS-Adobe-2.0 EPSF-2.0
%%Title: terkep4.eps
%%Creator: fig2dev Version 3.2 Patchlevel 3c
%%CreationDate: Sat Sep 28 17:33:28 2002
%%For: szeredi@arany.iqsoft.hu (Szeredi Peter)
%%BoundingBox: 0 0 277 169
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 169 moveto 0 0 lineto 277 0 lineto 277 169 lineto closepath clip newpath
-88.0 222.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

% bricks
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 16 true [ 16 0 0 -16 0 16 ]
	{<008000800080008000800080
	 0080ffff8000800080008000
	 800080008000ffff>}
        imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P7 exch def

% horizontal sawtooth lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<000000000000000000000000000000000000000000000000
	000000000100010002800280044004400820082010101010
	20082008400440048002800200010001>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P21 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
%
% Fig objects follow
%
7.500 slw
% Ellipse
n 1950 1350 150 150 0 360 DrawEllipse gs /PC [[0.53 0.81 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 2250 1350 150 150 0 360 DrawEllipse gs /PC [[1.00 0.63 0.63] [0.00 0.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 140.00 80.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 5250 1950 150 150 0 360 DrawEllipse gs /PC [[1.00 0.63 0.63] [0.00 0.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 340.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr

 [60] 0 sd
% Ellipse
n 5550 1950 150 150 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 4800 2700 150 150 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
% Ellipse
n 5100 2700 150 150 0 360 DrawEllipse gs /PC [[1.00 0.63 0.63] [0.00 0.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 330.00 170.00] PATmp PATsp ef gr PATusp gs col0 s gr

 [60] 0 sd
% Ellipse
n 5400 2700 150 150 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
% Ellipse
n 1950 2700 150 150 0 360 DrawEllipse gs /PC [[0.53 0.81 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 170.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 2250 2700 150 150 0 360 DrawEllipse gs /PC [[1.00 0.63 0.63] [0.00 0.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 140.00 170.00] PATmp PATsp ef gr PATusp gs col0 s gr

 [60] 0 sd
% Ellipse
n 2550 2700 150 150 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
 [45] 0 sd
% Ellipse
n 2550 1350 150 150 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
% Ellipse
n 4950 1950 150 150 0 360 DrawEllipse gs /PC [[0.53 0.81 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 320.00 120.00] PATmp PATsp ef gr PATusp gs col0 s gr

 [60] 0 sd
% Ellipse
n 3300 2400 150 150 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
 [60] 0 sd
% Ellipse
n 3600 2400 150 150 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
% Ellipse
n 3900 2400 150 150 0 360 DrawEllipse gs /PC [[1.00 1.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P21 [16 0 0 -8 250.00 150.00] PATmp PATsp ef gr PATusp gs col0 s gr

% Polyline
2 slj
n 1600 1638 m 1592 1663 l 1584 1688 l 1577 1713 l 1570 1739 l 1562 1765 l
 1555 1791 l 1548 1818 l 1542 1846 l 1536 1873 l 1529 1901 l
 1524 1930 l 1518 1958 l 1514 1986 l 1509 2015 l 1505 2043 l
 1502 2071 l 1499 2099 l 1496 2127 l 1495 2153 l 1493 2180 l
 1493 2206 l 1492 2231 l 1493 2256 l 1494 2281 l 1495 2306 l
 1498 2330 l 1500 2354 l 1503 2379 l 1507 2404 l 1512 2429 l
 1517 2455 l 1524 2481 l 1531 2508 l 1538 2535 l 1547 2562 l
 1557 2590 l 1567 2618 l 1578 2647 l 1590 2675 l 1603 2703 l
 1617 2731 l 1631 2759 l 1646 2786 l 1661 2813 l 1677 2840 l
 1694 2865 l 1711 2890 l 1728 2915 l 1746 2939 l 1764 2962 l
 1783 2985 l 1803 3008 l 1820 3027 l 1838 3046 l 1857 3066 l
 1876 3085 l 1897 3105 l 1918 3124 l 1940 3144 l 1963 3163 l
 1987 3183 l 2011 3203 l 2037 3222 l 2063 3242 l 2089 3261 l
 2117 3280 l 2144 3299 l 2172 3317 l 2200 3335 l 2229 3352 l
 2257 3368 l 2286 3384 l 2314 3400 l 2343 3414 l 2371 3428 l
 2398 3441 l 2426 3454 l 2453 3465 l 2480 3476 l 2507 3486 l
 2533 3496 l 2560 3505 l 2587 3513 l 2613 3521 l 2641 3529 l
 2668 3536 l 2696 3542 l 2725 3549 l 2754 3555 l 2784 3560 l
 2815 3565 l 2846 3570 l 2878 3575 l 2910 3579 l 2943 3583 l
 2976 3587 l 3010 3590 l 3044 3594 l 3078 3596 l 3112 3599 l
 3146 3602 l 3180 3604 l 3214 3607 l 3248 3609 l 3281 3611 l
 3315 3613 l 3348 3615 l 3381 3617 l 3414 3619 l 3447 3621 l
 3479 3623 l 3513 3625 l 3544 3627 l 3576 3630 l 3608 3632 l
 3641 3634 l 3674 3637 l 3708 3639 l 3743 3642 l 3779 3644 l
 3815 3647 l 3851 3649 l 3888 3651 l 3926 3653 l 3964 3655 l
 4001 3656 l 4039 3657 l 4077 3658 l 4115 3658 l 4152 3658 l
 4189 3657 l 4225 3656 l 4260 3655 l 4295 3653 l 4328 3650 l
 4361 3647 l 4393 3643 l 4424 3639 l 4453 3634 l 4482 3629 l
 4510 3622 l 4537 3616 l 4562 3608 l 4588 3600 l 4615 3590 l
 4642 3578 l 4669 3566 l 4695 3552 l 4720 3538 l 4746 3522 l
 4771 3506 l 4796 3488 l 4820 3469 l 4844 3450 l 4869 3430 l
 4893 3409 l 4916 3388 l 4940 3366 l 4963 3344 l 4985 3322 l
 5008 3300 l 5030 3279 l 5052 3257 l 5073 3236 l 5094 3215 l
 5115 3195 l 5135 3175 l 5156 3156 l 5176 3138 l 5196 3121 l
 5217 3104 l 5238 3088 l 5260 3071 l 5284 3054 l 5308 3038 l
 5332 3023 l 5358 3008 l 5384 2993 l 5411 2978 l 5438 2963 l
 5466 2948 l 5494 2934 l 5522 2919 l 5551 2905 l 5579 2891 l
 5607 2877 l 5634 2863 l 5661 2849 l 5687 2835 l 5713 2822 l
 5737 2808 l 5760 2795 l 5782 2781 l 5803 2768 l 5823 2754 l
 5841 2741 l 5859 2727 l 5875 2713 l 5893 2695 l 5910 2677 l
 5926 2657 l 5941 2637 l 5954 2615 l 5967 2593 l 5979 2569 l
 5991 2545 l 6001 2519 l 6010 2493 l 6018 2466 l 6026 2439 l
 6033 2412 l 6038 2384 l 6043 2357 l 6048 2330 l 6051 2303 l
 6054 2277 l 6057 2251 l 6059 2225 l 6061 2200 l 6063 2175 l
 6064 2150 l 6065 2125 l 6066 2099 l 6067 2073 l 6068 2047 l
 6068 2021 l 6068 1994 l 6068 1968 l 6066 1941 l 6065 1915 l
 6063 1889 l 6060 1864 l 6057 1839 l 6053 1816 l 6049 1794 l
 6044 1773 l 6038 1753 l 6032 1735 l 6025 1718 l 6017 1702 l
 6009 1688 l 6000 1675 l 5988 1660 l 5974 1647 l 5960 1635 l
 5943 1624 l 5926 1614 l 5907 1605 l 5886 1597 l 5865 1589 l
 5843 1582 l 5821 1575 l 5798 1569 l 5775 1563 l 5753 1557 l
 5731 1551 l 5710 1545 l 5689 1539 l 5669 1532 l 5650 1525 l
 5633 1518 l 5616 1510 l 5599 1501 l 5582 1492 l 5564 1481 l
 5547 1470 l 5529 1459 l 5510 1446 l 5492 1433 l 5473 1420 l
 5454 1406 l 5436 1392 l 5417 1378 l 5398 1365 l 5380 1351 l
 5361 1338 l 5343 1325 l 5325 1312 l 5306 1300 l 5288 1288 l
 5270 1277 l 5252 1266 l 5234 1255 l 5214 1244 l 5194 1233 l
 5174 1222 l 5153 1211 l 5131 1200 l 5109 1189 l 5087 1178 l
 5064 1168 l 5042 1157 l 5020 1147 l 4998 1137 l 4977 1128 l
 4957 1119 l 4937 1111 l 4918 1103 l 4900 1095 l 4883 1088 l
 4866 1081 l 4850 1075 l 4833 1068 l 4817 1062 l 4800 1056 l
 4784 1050 l 4767 1044 l 4749 1038 l 4731 1033 l 4713 1027 l
 4694 1022 l 4674 1018 l 4653 1013 l 4631 1009 l 4609 1005 l
 4586 1002 l 4561 999 l 4536 996 l 4510 994 l 4483 991 l
 4455 989 l 4425 988 l 4404 986 l 4382 985 l 4359 984 l
 4335 983 l 4309 983 l 4283 982 l 4255 981 l 4226 980 l
 4196 980 l 4165 979 l 4134 978 l 4101 978 l 4067 978 l
 4033 977 l 3999 977 l 3964 976 l 3929 976 l 3893 976 l
 3858 976 l 3823 976 l 3788 975 l 3754 975 l 3720 975 l
 3687 975 l 3655 975 l 3623 975 l 3591 975 l 3560 975 l
 3530 975 l 3500 975 l 3468 975 l 3437 975 l 3405 975 l
 3373 975 l 3341 975 l 3309 975 l 3277 975 l 3245 975 l
 3212 975 l 3179 974 l 3146 974 l 3113 974 l 3080 974 l
 3048 973 l 3016 973 l 2984 972 l 2952 972 l 2922 971 l
 2891 971 l 2862 970 l 2833 969 l 2805 969 l 2778 968 l
 2751 967 l 2725 966 l 2700 965 l 2675 964 l 2650 963 l
 2621 961 l 2593 959 l 2564 958 l 2536 956 l 2507 954 l
 2478 952 l 2449 950 l 2419 947 l 2390 945 l 2361 942 l
 2333 940 l 2305 937 l 2278 935 l 2251 933 l 2226 930 l
 2201 928 l 2178 925 l 2156 923 l 2135 921 l 2116 919 l
 2098 917 l 2081 916 l 2065 914 l 2050 913 l 2033 911 l
 2018 909 l 2003 908 l 1990 908 l 1977 908 l 1964 908 l
 1953 910 l 1942 912 l 1931 915 l 1921 919 l 1912 924 l
 1903 931 l 1894 938 l 1886 947 l 1878 957 l 1870 968 l
 1862 980 l 1854 994 l 1846 1009 l 1838 1025 l 1830 1040 l
 1822 1056 l 1814 1074 l 1806 1092 l 1797 1113 l 1787 1134 l
 1777 1158 l 1767 1182 l 1756 1208 l 1746 1234 l 1735 1262 l
 1723 1291 l 1712 1320 l 1701 1349 l 1689 1379 l 1678 1409 l
 1668 1439 l 1657 1468 l 1647 1498 l 1637 1526 l 1627 1555 l
 1618 1583 l 1609 1610 l
 cp gs col0 s gr 
% Polyline
n 2850 1650 m 2849 1650 l 2846 1649 l 2838 1647 l 2823 1643 l 2802 1638 l
 2774 1631 l 2741 1624 l 2706 1615 l 2669 1607 l 2632 1600 l
 2597 1593 l 2564 1587 l 2534 1583 l 2506 1579 l 2481 1578 l
 2459 1577 l 2439 1578 l 2420 1580 l 2403 1583 l 2388 1588 l
 2371 1594 l 2355 1602 l 2339 1611 l 2324 1622 l 2309 1634 l
 2293 1647 l 2278 1662 l 2262 1677 l 2247 1693 l 2231 1709 l
 2214 1725 l 2198 1741 l 2181 1757 l 2163 1772 l 2146 1787 l
 2127 1800 l 2108 1813 l 2088 1825 l 2071 1833 l 2054 1841 l
 2036 1849 l 2016 1856 l 1994 1863 l 1970 1870 l 1945 1876 l
 1916 1883 l 1886 1889 l 1852 1896 l 1817 1902 l 1779 1909 l
 1740 1915 l 1701 1921 l 1662 1927 l 1625 1933 l 1591 1938 l
 1562 1942 l 1538 1945 l 1521 1947 l 1509 1949 l 1503 1950 l

 1500 1950 l gs col0 s gr 
% Polyline
n 4125 1650 m 4124 1649 l 4120 1645 l 4111 1636 l 4098 1621 l 4081 1603 l
 4064 1585 l 4048 1567 l 4034 1551 l 4023 1536 l 4014 1523 l
 4006 1512 l 4000 1500 l 3995 1488 l 3990 1477 l 3986 1464 l
 3983 1452 l 3980 1438 l 3978 1425 l 3977 1412 l 3976 1398 l
 3975 1386 l 3975 1373 l 3975 1362 l 3975 1350 l 3975 1338 l
 3975 1327 l 3976 1315 l 3977 1303 l 3978 1290 l 3980 1278 l
 3983 1267 l 3987 1256 l 3992 1247 l 3998 1239 l 4005 1231 l
 4013 1225 l 4022 1220 l 4033 1215 l 4045 1211 l 4058 1207 l
 4073 1203 l 4088 1200 l 4102 1197 l 4117 1193 l 4130 1189 l
 4142 1185 l 4153 1180 l 4163 1175 l 4170 1169 l 4177 1162 l
 4183 1153 l 4188 1144 l 4192 1134 l 4195 1123 l 4197 1112 l
 4198 1101 l 4199 1091 l 4200 1081 l 4200 1071 l 4200 1063 l
 4200 1050 l 4200 1038 l 4200 1025 l 4200 1010 l 4200 995 l
 4200 982 l 4200 976 l
 4200 975 l gs col0 s gr 
% Polyline
n 4350 2325 m 4351 2325 l 4355 2323 l 4364 2320 l 4379 2315 l 4399 2307 l
 4421 2299 l 4444 2290 l 4465 2282 l 4484 2273 l 4501 2266 l
 4516 2259 l 4529 2252 l 4540 2245 l 4550 2238 l 4563 2227 l
 4575 2215 l 4587 2204 l 4598 2192 l 4607 2180 l 4616 2170 l
 4623 2161 l 4629 2155 l 4634 2151 l 4638 2150 l 4641 2152 l
 4645 2158 l 4647 2167 l 4650 2178 l 4653 2191 l 4655 2204 l
 4659 2215 l 4663 2225 l 4666 2231 l 4671 2236 l 4677 2241 l
 4683 2244 l 4691 2247 l 4699 2248 l 4708 2249 l 4718 2250 l
 4727 2250 l 4738 2250 l 4746 2250 l 4756 2250 l 4767 2251 l
 4778 2253 l 4791 2255 l 4805 2259 l 4820 2264 l 4835 2270 l
 4851 2278 l 4867 2288 l 4883 2299 l 4900 2313 l 4913 2324 l
 4927 2337 l 4942 2350 l 4957 2365 l 4973 2381 l 4989 2397 l
 5006 2413 l 5023 2429 l 5040 2444 l 5056 2458 l 5072 2470 l
 5087 2480 l 5101 2489 l 5114 2495 l 5126 2499 l 5138 2500 l
 5149 2498 l 5161 2493 l 5171 2486 l 5182 2475 l 5193 2461 l
 5203 2446 l 5214 2429 l 5225 2411 l 5237 2392 l 5248 2374 l
 5260 2357 l 5273 2340 l 5286 2326 l 5300 2313 l 5312 2303 l
 5325 2295 l 5338 2288 l 5353 2282 l 5368 2276 l 5385 2272 l
 5401 2268 l 5419 2266 l 5436 2264 l 5453 2263 l 5470 2263 l
 5486 2265 l 5501 2267 l 5516 2270 l 5529 2273 l 5541 2277 l
 5552 2282 l 5563 2288 l 5576 2297 l 5587 2308 l 5598 2320 l
 5607 2333 l 5616 2348 l 5625 2363 l 5634 2377 l 5643 2392 l
 5652 2405 l 5663 2417 l 5674 2428 l 5688 2438 l 5699 2444 l
 5712 2449 l 5727 2453 l 5745 2457 l 5766 2461 l 5790 2464 l
 5817 2466 l 5847 2469 l 5879 2470 l 5911 2472 l 5941 2473 l
 5966 2474 l 5984 2475 l 5995 2475 l 5999 2475 l
 6000 2475 l gs col0 s gr 
% Polyline
n 3810 2805 m 3810 2807 l 3809 2811 l 3809 2818 l 3808 2830 l 3807 2845 l
 3805 2865 l 3803 2888 l 3801 2915 l 3799 2944 l 3797 2976 l
 3795 3008 l 3794 3042 l 3793 3077 l 3792 3111 l 3792 3145 l
 3792 3180 l 3794 3214 l 3796 3248 l 3799 3281 l 3803 3314 l
 3809 3346 l 3816 3377 l 3825 3405 l 3840 3440 l 3856 3464 l
 3871 3478 l 3885 3483 l 3897 3481 l 3907 3473 l 3916 3463 l
 3925 3450 l 3934 3437 l 3943 3425 l 3954 3415 l 3967 3408 l
 3981 3407 l 3998 3411 l 4017 3420 l 4035 3435 l 4054 3456 l
 4069 3479 l 4080 3502 l 4089 3525 l 4096 3549 l 4100 3572 l
 4104 3595 l 4106 3617 l 4108 3637 l 4109 3653 l 4110 3665 l
 4110 3672 l
 4110 3675 l gs col0 s gr 
% Polyline
n 3690 1545 m 3738 1539 l 3781 1537 l 3819 1537 l 3850 1540 l 3874 1544 l
 3893 1549 l 3906 1555 l 3916 1561 l 3923 1568 l 3929 1575 l
 3934 1582 l 3941 1590 l 3949 1598 l 3961 1606 l 3977 1615 l
 3998 1624 l 4024 1634 l 4054 1644 l 4089 1654 l 4125 1665 l
 4164 1676 l 4198 1685 l 4227 1691 l 4250 1694 l 4268 1694 l
 4282 1691 l 4292 1686 l 4300 1679 l 4306 1672 l 4312 1666 l
 4319 1661 l 4326 1658 l 4336 1659 l 4348 1665 l 4362 1677 l
 4378 1695 l 4394 1722 l 4410 1755 l 4420 1786 l 4428 1819 l
 4433 1851 l 4436 1880 l 4438 1906 l 4438 1929 l 4436 1949 l
 4434 1966 l 4431 1981 l 4428 1995 l 4424 2008 l 4420 2021 l
 4416 2035 l 4412 2051 l 4407 2071 l 4403 2093 l 4399 2121 l
 4395 2153 l 4392 2190 l 4388 2232 l 4384 2277 l 4380 2325 l
 4376 2376 l 4372 2424 l 4369 2466 l 4368 2502 l 4368 2531 l
 4370 2555 l 4373 2574 l 4376 2589 l 4381 2601 l 4385 2613 l
 4389 2623 l 4392 2634 l 4394 2647 l 4394 2662 l 4392 2680 l
 4386 2701 l 4376 2725 l 4362 2752 l 4343 2779 l 4320 2805 l
 4293 2826 l 4265 2843 l 4239 2854 l 4216 2860 l 4196 2862 l
 4180 2860 l 4167 2856 l 4156 2850 l 4146 2843 l 4137 2835 l
 4128 2827 l 4118 2818 l 4105 2811 l 4088 2804 l 4066 2799 l
 4039 2796 l 4006 2795 l 3966 2796 l 3920 2800 l 3870 2805 l
 3827 2810 l 3786 2817 l 3748 2823 l 3713 2830 l 3682 2838 l
 3655 2846 l 3632 2853 l 3612 2862 l 3595 2870 l 3581 2878 l
 3567 2886 l 3555 2894 l 3543 2902 l 3530 2909 l 3516 2916 l
 3501 2923 l 3484 2929 l 3464 2934 l 3441 2937 l 3416 2939 l
 3388 2940 l 3359 2938 l 3329 2933 l 3300 2925 l 3267 2910 l
 3241 2892 l 3224 2872 l 3214 2851 l 3212 2831 l 3215 2812 l
 3222 2794 l 3231 2776 l 3243 2759 l 3254 2741 l 3264 2723 l
 3272 2704 l 3276 2685 l 3275 2664 l 3269 2642 l 3256 2620 l
 3236 2599 l 3210 2580 l 3183 2567 l 3156 2558 l 3129 2554 l
 3105 2552 l 3083 2555 l 3063 2559 l 3046 2566 l 3031 2574 l
 3017 2583 l 3004 2593 l 2990 2602 l 2976 2611 l 2961 2620 l
 2944 2628 l 2924 2633 l 2901 2637 l 2876 2639 l 2848 2637 l
 2819 2633 l 2790 2625 l 2770 2617 l 2751 2609 l 2735 2601 l
 2721 2594 l 2710 2588 l 2700 2583 l 2693 2579 l 2687 2577 l
 2682 2576 l 2678 2576 l 2675 2576 l 2673 2577 l 2671 2578 l
 2670 2578 l 2668 2578 l 2667 2576 l 2665 2573 l 2664 2568 l
 2662 2560 l 2660 2549 l 2658 2535 l 2656 2516 l 2655 2494 l
 2654 2467 l 2654 2435 l 2655 2400 l 2658 2362 l 2663 2323 l
 2668 2284 l 2674 2246 l 2679 2210 l 2685 2177 l 2690 2146 l
 2695 2118 l 2699 2091 l 2703 2067 l 2707 2044 l 2711 2022 l
 2715 2000 l 2719 1979 l 2723 1957 l 2728 1935 l 2734 1912 l
 2741 1887 l 2749 1862 l 2758 1834 l 2769 1806 l 2782 1776 l
 2797 1746 l 2813 1717 l 2831 1689 l 2850 1665 l 2873 1643 l
 2896 1628 l 2918 1619 l 2938 1617 l 2955 1619 l 2971 1625 l
 2984 1634 l 2996 1645 l 3006 1658 l 3016 1672 l 3025 1688 l
 3034 1703 l 3043 1719 l 3053 1734 l 3063 1749 l 3075 1764 l
 3088 1778 l 3103 1791 l 3118 1803 l 3134 1813 l 3150 1822 l
 3165 1830 l 3172 1834 l 3178 1837 l 3183 1839 l 3187 1842 l
 3190 1844 l 3192 1846 l 3193 1847 l 3192 1849 l 3191 1850 l
 3189 1851 l 3186 1852 l 3183 1853 l 3179 1854 l 3174 1855 l
 3169 1856 l 3163 1856 l 3157 1857 l 3151 1858 l 3145 1858 l
 3139 1859 l 3133 1859 l 3126 1859 l 3121 1860 l 3115 1860 l
 3110 1860 l 3105 1859 l 3101 1859 l 3098 1858 l 3095 1857 l
 3094 1856 l 3093 1854 l 3094 1852 l 3096 1849 l 3099 1846 l
 3103 1842 l 3110 1838 l 3117 1833 l 3127 1828 l 3138 1822 l
 3150 1815 l 3173 1802 l 3199 1789 l 3224 1775 l 3249 1761 l
 3272 1747 l 3293 1734 l 3311 1722 l 3328 1711 l 3343 1700 l
 3357 1689 l 3370 1679 l 3383 1669 l 3395 1659 l 3409 1649 l
 3424 1639 l 3441 1628 l 3461 1617 l 3483 1606 l 3510 1595 l
 3539 1584 l 3573 1572 l 3610 1562 l 3649 1552 l
 cp gs col0 s gr 
/Helvetica-Bold ff 360.00 scf sf
4650 1575 m
gs 1 -1 sc (C) col0 sh gr
/Helvetica-Bold ff 360.00 scf sf
2925 3225 m
gs 1 -1 sc (D) col0 sh gr
/Helvetica-Bold ff 360.00 scf sf
4575 3225 m
gs 1 -1 sc (E) col0 sh gr
/Helvetica-Bold ff 540.00 scf sf
3210 1710 m
gs 1 -1 sc  315.0 rot (<) col0 sh gr
/Helvetica-Bold ff 360.00 scf sf
3495 2220 m
gs 1 -1 sc (A) col0 sh gr
/Helvetica-Bold ff 540.00 scf sf
3690 3240 m
gs 1 -1 sc (<) col0 sh gr
/Helvetica-Bold ff 360.00 scf sf
3000 1500 m
gs 1 -1 sc (B) col0 sh gr
$F2psEnd
rs
end
